// Copyright 2012 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

const wchar_t* const kLoggerRpcProtocol = L"ncalrpc";
const wchar_t* const kLoggerRpcEndpointRoot = L"syzygy-logger";

// Defines the Logger's RPC interface.
[
    uuid(EAFBDDB2-713D-4FAC-B3F1-CC0944E82DDA),
    version(1.0)
]
interface Logger {
  // Write some text to the log.
  // @param text The string to be logged.
  boolean Write([in] handle_t binding, [in, string] const char* text);

  // Write a message and stack trace to the log.
  // @param text The string to be logged.
  // @param trace A pointer to the stack trace capture.
  // @param trace_size The size (in bytes) if the stack trace capture.
  boolean WriteWithTrace(
      [in] handle_t binding,
      [in, string] const char* text,
      [in, size_is(trace_length)] const unsigned long trace_data[*],
      [in] long trace_length);
}

// Defines the Logger's RPC Control interface.
// TODO(rogerm): Move this to it's own IDL file and endpoint.
[
    uuid(6514F04C-4BD5-48AE-BD2D-8E071DA29752),
    version(1.0)
]
interface LoggerControl {
  // Request a shutdown of the logging service.
  boolean Stop([in] handle_t binding);
}
